// <auto-generated />
using System;
using Consult.DataAcess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cunsult.DataAcess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230608123805_AddForeignKeyForKonsultimeLendetRelation")]
    partial class AddForeignKeyForKonsultimeLendetRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Consult.Models.Konsultimet", b =>
                {
                    b.Property<int>("Kid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kid"));

                    b.Property<int>("KLid")
                        .HasColumnType("int");

                    b.Property<int>("KPid")
                        .HasColumnType("int");

                    b.Property<DateTime>("KkohaEFillimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KkohaEMbarimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kpershkrimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ktitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Kid");

                    b.HasIndex("KLid");

                    b.ToTable("Konsultimet");

                    b.HasData(
                        new
                        {
                            Kid = 1,
                            KLid = 100,
                            KPid = 0,
                            KkohaEFillimit = new DateTime(2023, 6, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            KkohaEMbarimit = new DateTime(2023, 6, 8, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            Kpershkrimi = "Konsultime nga lenda e Fizikës",
                            Ktitle = "Konsultimi 1"
                        },
                        new
                        {
                            Kid = 2,
                            KLid = 100,
                            KPid = 0,
                            KkohaEFillimit = new DateTime(2023, 6, 8, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            KkohaEMbarimit = new DateTime(2023, 6, 8, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Kpershkrimi = "Konsultime nga lenda e Siguris",
                            Ktitle = "Konsultimi 2"
                        },
                        new
                        {
                            Kid = 3,
                            KLid = 103,
                            KPid = 0,
                            KkohaEFillimit = new DateTime(2023, 6, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            KkohaEMbarimit = new DateTime(2023, 6, 9, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            Kpershkrimi = "Konsultime nga lenda e Matematikes",
                            Ktitle = "Konsultimi 3"
                        },
                        new
                        {
                            Kid = 4,
                            KLid = 103,
                            KPid = 0,
                            KkohaEFillimit = new DateTime(2023, 6, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            KkohaEMbarimit = new DateTime(2023, 6, 10, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            Kpershkrimi = "Konsultime nga lenda e Sinjaleve",
                            Ktitle = "Konsultimi 4"
                        });
                });

            modelBuilder.Entity("Consult.Models.Lendet", b =>
                {
                    b.Property<int>("Lid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lid"));

                    b.Property<int>("LPid")
                        .HasColumnType("int");

                    b.Property<string>("Ldescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Lid");

                    b.ToTable("Lendet");

                    b.HasData(
                        new
                        {
                            Lid = 100,
                            LPid = 0,
                            Ldescription = "Kjo lende ka 7 kredi",
                            Lname = "Algjebra lineare dhe kalkulus 1"
                        },
                        new
                        {
                            Lid = 101,
                            LPid = 0,
                            Ldescription = "Kjo lende ka 6 kredi",
                            Lname = "Fizika 1"
                        },
                        new
                        {
                            Lid = 103,
                            LPid = 0,
                            Ldescription = "Kjo lende ka 7 kredi",
                            Lname = "Bazat e inxhinierise elektrike 1"
                        });
                });

            modelBuilder.Entity("Consult.Models.Konsultimet", b =>
                {
                    b.HasOne("Consult.Models.Lendet", "Lid")
                        .WithMany()
                        .HasForeignKey("KLid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lid");
                });
#pragma warning restore 612, 618
        }
    }
}
